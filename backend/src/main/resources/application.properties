spring.datasource.url=jdbc:postgresql://localhost:5432/faciesliber
spring.datasource.username=${USER}
spring.datasource.password=${PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1
# =======================================
# = JPA / HIBERNATE
# =======================================
# Show or not log for each sql query
spring.jpa.show-sql=true
## Hibernate properties
# Hibernate ddl auto (create, create-drop, update): with "create-drop", the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.profiles.active=production
spring.jpa.openInView=false
spring.jpa.generate-ddl=true
logging.level.org.springframework.web=INFO
logging.level.com.example=DEBUG
logging.level.org.springframework.security=DEBUG
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
#image.path=${IMAGE_PATH}